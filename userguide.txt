                                            URLyBird user guide
                                            -------------------

Table of contents
-----------------
1. Overview
2. Requirements
3. Starting the application
    3.1. Running the application in standalone mode
    3.2. Running the application in server mode
    3.3. Running the application in network client mode
4. Using the client GUI
    4.1 GUI overview
    4.2 Searching for rooms
    4.3 Booking a room
5. Quitting the application

1. Overview
-----------

The URLyBird application allows users to search for hotels rooms and to book selected rooms on behalf of clients.
The user can search for hotel rooms by name and / or location.  Data is persisted to a database file.  The application
may be run locally or as a distributed system.

2. Requirements
---------------

URLyBird requires a minimum of Java version 1.7 to run.  If running the application in standalone mode or server mode,
the database file must be located on the same machine that the application is running on.  If the application is to be
run in network client mode, there must already be a server running to accept client requests.

3. Starting the application
---------------------------

URLyBird comes packaged as an executable jar file.  The archive file "runme.jar" is this executable.  The commands to
start the application all have similar form, with just mode "flags" differentiating them.  They take the form:

    java -jar <path_to_runme.jar> [<mode>]

The mode flag must be either "server", indicating the server program must run, "alone", indicating standalone mode,
or left out entirely, in which case the network client and gui must run.

Application configuration data is persisted between runs to a file called "suncertify.properties".  When the application
is run for the first time, this file will not exist.  It will however be created in the current working directory
and the configuration data entered by the user will be saved to the file.  Whenever configuration data is inaccessible
for whatever reason (suncertify.properties isn't locatable or doesn't contain the necessary data), the user will be
informed of this and prompted to input the data manually.

3.1 Running the application in standalone mode
----------------------------------------------

Assuming that the current working directory contains runme.jar, the application may be started in standalone mode with
the following command:

    java -jar runme.jar alone

A dialog should now appear on the screen.  Click the "Browse" button to open a file chooser and select the database
file.  Once a database file with file extension '.db' has been selected the "Connect" button is enabled.  To display the
main GUI, click the "Connect" button.  The application will now read the data from the selected file and display all
rooms in the client GUI.

3.2 Running the application in server mode
------------------------------------------

Assuming once again that the current working directory contains runme.jar, start the application in server mode with
the following command:

    java -jar runme.jar server

The server GUI will now be displayed.  To select a database file, click the "Browse" button and navigate to the desired
file using the file chooser.  To set the port that the server should listen for requests on, enter a port number in the
"Port Number" text field.  Valid port numbers are in the range 1025 - 65535 inclusive.  Note that the selected port
must not be in use by another application or URLyBird will not start.  Once a database file is selected and a valid port
number entered the "Start" button becomes enabled.  Click the "Start" button to run the server.  The server will now
listen for requests from remote clients.

3.3 Running the application in network client mode
--------------------------------------------------

To start URLyBird in network client mode, there must first be a server running that is accessible via a network
connection.  Start the client with the command:

    java -jar runme.jar

A dialog should now be displayed.  In the "Hostname" field, enter the hostname or IP address of the database server.
In the "Port" field, enter the port that the server is accepting requests on. Valid port numbers are in the range
1025 - 65535 inclusive.  Once a hostname / IP address and a valid port number are entered, the "Connect" button will be
enabled.  Click the "Connect" button to connect to the server and run the client GUI.  The client will request data
from the database server and all rooms will be displayed.

4. Using the Client GUI
-----------------------

4.1 GUI overview
----------------

The client GUI consists of 3 main panels.  On the left is the "Search" panel.  It contains text fields and a "Search"
button to enable search by hotel name and / or location.  The bottom panel is where booking functions are performed.
It contains a customer ID text field and a "Book" button.  The third area is the table panel where rooms that match a
search are displayed.

4.2 Searching for rooms
-----------------------

Searches are case insensitive and full hotel name and / or location details are not required.  For instance, entering
"alb" in the "Name" field and clicking "Search" will return rooms from hotels whose names begin with those 3 letters.
So a search for "alb" matches "Alberta" and "Albion".  As mentioned previously, searches may contain name and / or
location queries.

NOTE: To display all records, leave both "Name" and "Location" fields blank and click "Search".  All records will be
displayed.

4.3 Booking a room
------------------

IMPORTANT:  ONCE A BOOKING IS MADE IT CANNOT BE ALTERED OF CANCELLED, SO PROCEED WITH CAUTION.

To book a room for a customer, the room of interest must be displayed on screen and must be selected.  You will know
when a room is selected as the row is highlighted in a green colour.  If there is no room selected, the "Customer ID"
field is disabled.  After selecting a room, enter an 8 digit customer ID in the field.  You will only be permitted to
enter digits and the length of the ID is capped at 8 characters.  The "Book" button should now become enabled.  To
proceed with the booking, click this button.  Once the "Owner" column of the selected record has been updated with the
ID of the customer that was just entered, the booking has been successful.

When running in network client mode however, several users are making bookings to the same database file via the server.
If for instance you perform a search and proceed to book a selected room, you may find that another client has booked
your selected room before you had the chance to do so.  In this eventuality, the "Owner" column of the record will be
updated to display the customer ID that the room was booked under by the other remote client.  A dialog will also be
displayed stating that the room has already been booked.

5. Quitting the application
---------------------------

Several means of quitting the application exist.  What they are depends on the application mode and whether or not
the main GUIs or configuration dialogs are displayed.  In all cases the 'X' button displayed at the top of each window
(on the left or right depends on your host platform) brings up a dialog asking if the user really wants to quit the
application.  To exit click "OK", to resume click "Cancel"

The client configuration dialogs additionally have an "Exit" button.  Clicking this button displays the confirm dialog
mentioned above.

The server GUI also has an "Exit" button.  It's operation is identical to that of the client configuration dialogs.

The client GUI has an "Application" menu.  Opening this menu reveals an "Exit" item.  Clicking this item will bring up
the confirm exit dialog.



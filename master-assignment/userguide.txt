==================== URLyBird application user guide ====================

====== Table of Contents ======
1. Overview
2. Prerequisites to running the application
3. How to run the application
4. Configuring the application
5. Running the server application
6. Running the client application
7. Running the standalone application (non-network/local mode)
8. Using the URLyBird GUI

======= 1. Overview =======

This application is designed and developed to aid the URLyBird customer service representative (CSR) in
booking hotel rooms for their customer. It allows CSRs to view, search and book available rooms.

======= 2. Prerequisites to running the application =======

Prior to running the application, user must have the Java Runtime Environment (JRE) installed on the 
computer. Download this from the Oracle website.

User will also need the runme.jar file that contains the URLyBird application.

======= 3. How to run the application =======

The steps for running the application in all 3 modes are almost identical. To run the jar navigate to 
the directory that the jar is placed in and in command line run the command:

    java -jar runme.jar <mode>

For the server application, <mode> is server. The command becomes:
	java -jar runme.jar server
	
For the networked client application, <mode> is blank. The command becomes:
	java -jar runme.jar
Note: If there is no server running, the client will fail to start properly.
	
For the stand-alone client application, <mode> is alone. The command becomes:
	java -jar runme.jar alone

======= 4. Configuring the application =======

When the application starts up in any mode a configuration window is displayed to user. When user 
enters valid parameters they will be saved in a properties file called suncertify.properties.
 
If the application starts up and detects an existing properties file it will load the values from the 
file to save user re-typing them. the properties file will then be overwritten with the values from the
new start up.

======= 5. Running the server application =======

When the server starts, user will be presented with a very simple user interface which allows user to 
enter the location of a database file and start the server so it can start accepting client calls.

To choose a database location press the "Browse" button in the user interface. It opens a dialog 
allowing user to select any file with a .db extension.

After selecting a database location, user should press the "Start" button on the user interface to 
start the server. Once the server is started, the "Browse" and "Start" buttons become grayed out and 
are no longer selectable. This indicates that the server has successfully started.

"Shutdown" button on the user interface allows user to close the application completely. If the server 
had been started previously, it will now stop and will no longer be able to receive connections.

======= 6. Running the client application =======

When the application is started in client mode, the first action user should take is specifying the 
location of the networked server. This is done via the server location dialog which is presented to 
user on start up.

There is a single text box allowing user to enter to hostname of the remote server. When clicking "OK" 
the client will attempt to connect to the server at the specified hostname. If a viable connection is 
established, the client window will open and display a list of rooms. Otherwise an error message will 
be displayed and user can enter the correct hostname or exit.

For information on using the client, check Section 8. Using the URLyBird GUI.

======= 7. Running the stand-alone application (non-network/local mode) =======

When the application is started in stand-alone mode, user will be presented with this same server user 
interface as detailed in the "5. Running the server application" section. All actions as described in 
that section are the same for stand-alone mode. The only difference being when user presses the "Start"
button the server user interface will now close and user will be presented with the client window which
displays a list of rooms. 

When user exits the client application in stand-alone mode, both the server and client will be shutdown.

For information on using the client, check Section 8. Using the URLyBird GUI.

======= 8. Using the URLyBird GUI =======

The URLyBird GUI is made up of 3 main components.

Records:

    There is a table of records displaying the available rooms to user.
    This table is populated by default when the window opens with all the records in the database.

	The width of these columns can be modified by dragging a column edge to make the column bigger or 
	smaller.
	
Search:

	The search feature allows user to search for available rooms based on the following fields; Name, 
	Location, Size, Smoking, Rate, Date and Owner(customer ID). Each field has a text box where user 
	can	enter the value he/she wishes to search on. Leaving a search box empty will not filter search 
	results	by that field.

	By default all searches are strict. This means the text user enter in the search boxes will only 
	return rooms whose fields exactly match the search criteria entered. Including case. A less strict 
	search can be performed by de-selecting the "Exact match" check-box, visible below the "Search" 
	button on the right of the search area. When the "Exact match" box is unchecked the search will 
	return rooms whose fields contain the search criteria. I.e. searching 'is' will match 'Metropolis' 
	'Digitopolis' and 'Atlantis'.

	If user leaves all search boxes empty, the search will display all available hotel rooms.

Book:

    The client window offers the functionality to book a room in the records table. This updates the 
    record in the database.
    
    To book a room, user must select a record from the records table and press the "Book Room" button.
    This will present user with a new dialog allowing you enter the ID of the customer booking the 
    room.
    
	When booking a room, user must enter an 8 digit number as the customer ID. No other text will be 
	accepted.

    If a record is already reserved the customer ID will appear in the records table. The user cannot 
    book a room that is already reserved.